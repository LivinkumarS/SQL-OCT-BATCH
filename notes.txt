What is Database?
>> A database is an organized collection of data. It can be easily manipulated.
access, create, update and delete

RDBMS --> Relational DB Management System, SQLDB
------------------------------------------
>> Data stored in form of Table(rows and columns).
>> Relationship exist between 2 tables.
Ex: MySQL, Oracle, PostgreSQL.... 
to work with RDBMS --> SQL

Non RDBMS, NoSQL 
---------
>> Data stored in form of Document, file....
Ex: MongoDb, FireBase, MariaDB...

SQL ---> Structured Query language 
----------------------------------
Basic Syntax
-------------
SELECT * FROM tbname; 
select * from tbname;
SeLeCt * fRoM tbname;

>> SQL Keywords are not case-sensitive. (a=A)
>> SQL query should end with ';'

Extension --> .sql


Database  --> Table1, Table2, Table3  --> Data 
(Schema)

Datatypes 
----------
Numeric 
---------
INT --->  whole numbers
BIGINT --> Very Large INT
FLOAT --> Decimal numbers 
DOUBLE --> Large Decimal number

STRING 
-------
CHAR(n) --> Fixed length char string. Ex: char(5) --> "hello"
VARCHAR(n) ---> Variable length char string. Ex: varchar(5)--> "allowed"
TEXT ---> Paragraph

DATE and TIME 
---------------
DATE --> 'yyyy-mm-dd'
TIME --> 'HH:MM::SS'
DATETIME --> both

Constraints
--------------
>> Additional Information about a column
PRIMARY KEY --> unique, not null. it is used to identify the data uniquely.

Operators 
----------
== --> equal
<>,!= ---> not equal
> --> greater than.
< --> lesser than.
<= --> lesser or equal.
>= --> greater or equal.

BETWEEN Operator --> used to find if a value lies within a range.
Ex: colName BETWEEN num1 AND num2

IN Operator --> Used when we need to match any one of several values.
Ex: colName IN (val1,val2.........);

Pattern Matching (LIKE Operator) ---> Used for searching with pattern(wildcards).
% --> matches any number of characters (0-inf)
_ --> matches only only char.

starts with 'v'  ---> 'v%' --> 'vijay','vijay sethupathy'
ends with 'a'  --> '%a'

Ex: colName LIKE 'pattern';

Logical Operators 
--------------------
AND, OR, NOT

LIMIT (pagination)
------
>> Used to limit the number of result.
Ex: LIMIT num;
>> OFFSET --> LIMIT num OFFSET num;  

SORTING ---> Arranging
--------
ORDER BY
Ex: ORDER BY col (ASC, DESC);

Queries 
----------
To Create New Database ---> CREATE DATABASE dbname;
To Select a DB ---> USE dbname;
To Create a Table ---> CREATE TABLE tbname (
    col1 datatype PRIMARY KEY,
    col2 datatype,
    col3 datatype
    .
    .
    .
);

To Create Data in a table --> INSERT INTO tbname (col details (opt)) VALUES (),(),()....;
To Retrive Data from the table --> SELECT (col details or *) FROM tbname; (to name a col at output ---> AS)
To Update Data from a table --> UPDATE tbname SET col1="",col2=""...... filteration;
To Delete Data from a table --> DELETE FROM tbname filteration;

sql_safe_updates=1 ---> 1 data can be updated or deleted, condition should be depend on primary key.


CRUD ---> Create Read Update Delete 
--------------------------------------
Create ---> INSERT
Read ---> SELECT 
Update ---> UPDATE
Delete ---> DELETE

WHERE 
-------
>> ..... WHERE condition;

Functions in MySQL
-------------------
>> These are predefined operations that takes an input, process it and returns output.

Numeric Functions
-----------------
ROUND(dec number) ---> Round off a decimal number into the nearest integer. ROUND(10.51) --> 11
CEIL(dec number)  --> Round off a number to the next number. CEIL(10.00009)
FLOOR(dec number) --> Round off a number to the previous integer.
MOD(a,b) ---> a%b. returns reminder.
ABS(num) --> absolute number of given value. ABS(-10) --> 10

STRING FUNCTIONS 
----------------
CONCAT(str1,str2,str3.....) ---> it will attach the strings together.
LENGTH(str) ---> Returns length of a string
UPPER(str) ---> convert into uppercase
LOWER(str) ---> convert into lowercase
SUBSTRING(str, start, lenght) --> Extract a part of string. "Hello world" --> 1,5
REPLACE(str, old, new) ---> used to replace a particular substring with other. "Hello guys" ---> Hello ---> Hi

DATE AND TIME 
--------------
CURDATE() --> return today's date. 
CURTIME() --> return time. 
NOW() --> both
DATEDIFF(date1, date1) --> difference in days. Ex: 2025-10-10, 2025-10-12--> 2